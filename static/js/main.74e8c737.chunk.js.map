{"version":3,"sources":["Input.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","ref","useState","value","setValue","error","setError","useImperativeHandle","clear","className","onChange","e","target","forwardRef","App","emailRef","useRef","passwordRef","style","width","console","count","htmlFor","type","id","aria-describedby","onClick","validInput","current","body","email","password","log","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAEMA,EAAQ,SAACC,EAAOC,GAAS,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAEFF,mBAAS,IAFP,mBAErBG,EAFqB,KAEdC,EAFc,KAkB5B,OATAC,8BAAoBN,GAAK,iBAAO,CAC9BE,QACAK,MAAO,WACLJ,EAAS,IACTE,EAAS,KAEXA,eAIA,mCACEG,UAAS,UAAKJ,EAAQ,aAAe,GAA5B,iBACTK,SAjBa,SAACC,GAChBL,EAAS,IACTF,EAASO,EAAEC,OAAOT,QAgBhBA,MAAOA,GACHH,KAKKa,uBAAWd,GC4CXe,MAvEf,WACE,IAAMC,EAAWC,mBACXC,EAAcD,mBA6BpB,OACE,qBAAKP,UAAU,YAAf,SACE,qBAAKA,UAAU,gCAAf,SACE,sBAAKA,UAAU,OAAOS,MAAO,CAAEC,MAAO,SAAtC,UACE,sBAAKV,UAAU,cAAf,qBAAsCW,QAAQC,WAC9C,qBAAKZ,UAAU,YAAf,SACE,iCACE,sBAAKA,UAAU,OAAf,UACE,uBAAOa,QAAQ,qBAAqBb,UAAU,aAA9C,2BACA,cAAC,EAAD,CACEc,KAAK,QACLC,GAAG,qBACHC,mBAAiB,YACjBxB,IAAKc,IAEP,qBAAKS,GAAG,YAAYf,UAAU,YAA9B,+DAEF,sBAAKA,UAAU,OAAf,UACE,uBAAOa,QAAQ,wBAAwBb,UAAU,aAAjD,sBACA,cAAC,EAAD,CACEc,KAAK,WACLC,GAAG,wBACHvB,IAAKgB,OAGT,wBACEM,KAAK,SACLd,UAAU,kBACViB,QA3CG,WACf,IAAMC,EAZFZ,EAASa,QAAQzB,QAIjBc,EAAYW,QAAQzB,QACtBc,EAAYW,QAAQtB,SAAS,0BACtB,IALPS,EAASa,QAAQtB,SAAS,uBACnB,GAWHuB,EAAO,CACXC,MAAOf,EAASa,QAAQzB,MACxB4B,SAAUd,EAAYW,QAAQzB,OAE5BwB,IACJP,QAAQY,IAAIH,EAAMF,GAElBM,YAAW,WACTlB,EAASa,QAAQpB,MAAM,IACvBS,EAAYW,QAAQpB,MAAM,MACzB,OA4BO,iCC/CC0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.74e8c737.chunk.js","sourcesContent":["import { forwardRef, useImperativeHandle, useState } from \"react\"\n\nconst Input = (props, ref) => {\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n\n  const onChange = (e) => {\n    setError('');\n    setValue(e.target.value);\n  }\n\n  useImperativeHandle(ref, () => ({\n    value,\n    clear: () => {\n      setValue('');\n      setError('');\n    },\n    setError\n  }))\n\n  return (\n    <input\n      className={`${error ? 'is-invalid' : ''} form-control`}\n      onChange={onChange}\n      value={value}\n      {...props}\n    />\n  )\n}\n\nexport default forwardRef(Input);\n","import { useRef } from \"react\";\nimport Input from \"./Input\";\n\nfunction App() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const validate = () => {\n    if(!emailRef.current.value) {\n      emailRef.current.setError('Email is required!');\n      return false;\n    }\n    if(!passwordRef.current.value) {\n      passwordRef.current.setError('Password is required!');\n      return false;\n    }\n    return true;\n  }\n\n  const onSubmit = () => {\n    const validInput = validate();\n    const body = {\n      email: emailRef.current.value, \n      password: passwordRef.current.value, \n    };\n    if(!validInput) return;\n    console.log(body, validInput);\n\n    setTimeout(() => {\n      emailRef.current.clear('');\n      passwordRef.current.clear('');\n    }, 800);\n  }\n  \n  return (\n    <div className=\"container\">\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"card\" style={{ width: '25rem' }}>\n          <div className=\"card-header\">Login - {console.count()}</div>\n          <div className=\"card-body\">\n            <form>\n              <div className=\"mb-3\">\n                <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n                <Input \n                  type=\"email\" \n                  id=\"exampleInputEmail1\" \n                  aria-describedby=\"emailHelp\" \n                  ref={emailRef}\n                />\n                <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\n                <Input \n                  type=\"password\" \n                  id=\"exampleInputPassword1\" \n                  ref={passwordRef}\n                />\n              </div>\n              <button \n                type=\"button\" \n                className=\"btn btn-primary\"\n                onClick={onSubmit}\n              >\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}